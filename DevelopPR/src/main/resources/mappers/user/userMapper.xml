<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="user">
	<!-- 회원 목록 -->
    <select id="listUser" resultType="UserVO">
        SELECT 
          EMAIL AS userEmail,
          IS_SEEK AS userIs_seek,
          NICK AS userNick,
          PW AS userPw,
          NAME AS userName,
          JOB AS userJob,
          JOB_DETAIL AS userJob_detail,
          RECENT_ACCESS AS userRecent_access,
          AUTHSTATUS AS userAuthStatus,
          USER_AUTHCODE AS userAuthCode
        FROM pr_user
        ORDER BY Nick
    </select>
    
    <!-- 회원 등록 -->
    <insert id="insertUser">
        INSERT INTO pr_user(EMAIL, IS_SEEK, NICK, PW, NAME, JOB, JOB_DETAIL, PHONE, PROFILE)
        VALUES(#{userEmail}, #{userIs_seek}, #{userNick}, #{userPw}, #{userName}, #{userJob}, #{userJob_detail}, #{userPhone}, #{profile})    
    </insert>
    
    <!-- 로그인 체크 -->
    <select id="loginCheck" resultType="String">
        SELECT PW AS userPw FROM pr_user
        WHERE EMAIL = #{userEmail}
    </select>
    
    <!-- 로그인 접속시 최근접속 시간 업데이트 -->
    <update id="updateRecent">
		UPDATE pr_user SET RECENT_ACCESS = SYSDATE+9/24 
		WHERE EMAIL = #{userEmail}
    </update>
    
    <!-- 로그인정보  -->
    <select id="viewlogin" resultType="UserVO">
        SELECT 
            NAME AS userName,
            NICK AS userNick,
            EMAIL AS userEmail,
            IS_SEEK AS userIs_seek,
            AUTHSTATUS AS userAuthStatus
        FROM pr_user
        WHERE EMAIL = #{userEmail}
    </select>
    
    <!--  회원 이메일, 이름, 닉네임 (팔로우) -->
    <select id="viewId" resultType="UserVO">
    	SELECT 
    		NAME AS userName,
            NICK AS userNick,
            EMAIL AS userEmail
        FROM pr_user
        WHERE EMAIL = #{email}
    </select>

    <!-- 아이디찾기 -->
    <select id="findId" parameterType="String" resultType="String">
    	SELECT EMAIL FROM pr_user
    	WHERE PHONE = #{phone}
    </select>
     
      <!-- 이메일 인증키 생성 -->
    <update id="createAuthKey">
		UPDATE pr_user SET USER_AUTHCODE = #{userAuthCode} 
		WHERE Email = #{userEmail}
	</update>
	 
	<!-- 이메일 인증 성공시 -->
	<update id="userAuth">
		UPDATE pr_user SET AUTHSTATUS = 1 
		WHERE Email = #{userEmail}
	</update>
	<!-- 로그인시 이메일 인증 여부 체크 -->
	<select id ="checkAuthStatus" resultType="int">
		SELECT AUTHSTATUS
		FROM pr_user
		WHERE EMAIL = #{userEmail}
	</select>
	<!-- ajax 이메일 중복 체크 -->
	<select id ="checkMail" resultType="int">
		 SELECT NVL(COUNT(*),0)
    	FROM pr_user WHERE EMAIL = #{userEmail}
	</select>
	<!-- ajax 닉네임 중복 체크 -->
	<select id ="checkNick" resultType="int">
		 SELECT NVL(COUNT(*),0)
    	FROM pr_user WHERE NICK = #{userNick}
	</select>
	<update id="updateAuthKey">
		UPDATE pr_user SET USER_AUTHCODE = #{userAuthCode}
		WHERE EMAIL = #{userEmail}
	</update>
	<!-- 장기 미접속 인원 가져오기 -->
	<select id ="longUnAccess" resultType="UserVO">
		SELECT * from pr_user
		WHERE (unaccess_mail =0 AND SYSDATE+9/24 >= (RECENT_ACCESS + NUMTODSINTERVAL(180,'DAY')))
		OR (unaccess_mail =1 AND SYSDATE+9/24 >= (RECENT_ACCESS + NUMTODSINTERVAL(270,'DAY')))
		OR (unaccess_mail =2 AND SYSDATE+9/24 >= (RECENT_ACCESS + NUMTOYMINTERVAL(1,'year')-7))
	</select>
 </mapper>