<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="meet">

<!-- 채팅방 생성 -->
<insert id = "createRoom">
	INSERT INTO PR_CHATROOM (CHATROOM_ID, SEND_USER_ID , RECEIVER_USER_ID, GET_ROOM) 
	values(#{chatroom_id}, #{send_user_id}, #{receiver_user_id}, #{chatroom_id})
</insert>

<!-- 채팅방 있는지 확인-->
<select id ="isRoom" resultType = "ChatRoomVO">
	SELECT * FROM PR_CHATROOM 
	WHERE chatroom_id LIKE '%'||#{send_user_id}||'%' AND chatroom_id LIKE '%'||#{receiver_user_id}||'%' 
	AND ((SEND_USER_ID = #{send_user_id} AND RECEIVER_USER_ID = #{receiver_user_id}) 
	      OR (SEND_USER_ID = #{receiver_user_id} AND RECEIVER_USER_ID = #{send_user_id}))
</select>

<!-- 메세지 전송-->
<insert id = "insertMessage">
	INSERT INTO PR_MESSAGE (CHATROOM_CHATROOM_ID, MESSAGE_SENDER , MESSAGE_RECEIVER, MESSAGE_CONTENT, MESSAGE_SENDTIME,
	 SEND_USER_ID , RECEIVER_USER_ID, SEND_USER_NAME, RECEIVER_USER_NAME, GET_LOOK)
	VALUES (#{chatroom_id},#{message_sender}, #{message_receiver}, #{message_content},SYSDATE+9/24, #{send_user_id}, #{receiver_user_id}, #{send_user_name}, #{receiver_user_name}, #{chatroom_id})
</insert>

<!-- 개인 채팅방 입장 (내용) -->
<select id = "getRoom" resultType = "MessageVO">
	SELECT CHATROOM_CHATROOM_ID AS chatroom_id, message_sender, send_user_id, send_user_name, message_receiver,receiver_user_id, receiver_user_name, message_content, message_sendtime, message_read 
	FROM PR_MESSAGE 
	WHERE chatroom_chatRoom_id = #{chatroom_id}  AND GET_LOOK LIKE '%'||#{send_user_id}||'%'
	ORDER BY MESSAGE_SENDTIME ASC
</select>

<!-- 채팅방 전체목록 -->
<select id ="listChatRoom" resultType ="ChatRoomVO">
	SELECT chatroom_id 
       ,send_user_id
       ,receiver_user_id
       ,(select message_content from pr_message where chatroom_chatroom_id = a.chatroom_id ORDER BY MESSAGE_SENDTIME DESC FETCH FIRST 1 ROW ONLY) AS lastMessage
       ,(select message_sendtime from pr_message where chatroom_chatroom_id = a.chatroom_id ORDER BY MESSAGE_SENDTIME DESC FETCH FIRST 1 ROW ONLY) AS lastTime
	   ,(select count(*) from pr_message where chatroom_chatroom_id=a.chatroom_id AND MESSAGE_READ ='1' AND MESSAGE_RECEIVER = #{userNick}) AS unReadCount
	  ,(select profile from pr_user where nick =a.send_user_id) as send_profile
     ,(select profile from pr_user where nick =a.receiver_user_id) as receiver_profile
	FROM pr_chatroom a
	WHERE chatroom_id LIKE '%'||#{userNick}||'%' AND (SEND_USER_ID = #{userNick} OR RECEIVER_USER_ID = #{userNick}) AND GET_ROOM LIKE '%'||#{userNick}||'%'
	ORDER BY LASTTIME DESC
</select>
<update id = "readUpdate">
	update PR_MESSAGE SET MESSAGE_READ = 0
	WHERE CHATROOM_CHATROOM_ID = #{chatroom_id} AND MESSAGE_RECEIVER = #{send_user_id}
</update>

<!-- 다른 페이지에 있을 시 실시간 알림 -->
<select id = "alarm" resultType ="int">
	select count(*) as unReadCount
	from pr_message
	where message_receiver = #{userNick} AND MESSAGE_READ = 1
</select>	

<!-- 채팅방 나갈 시 채팅방테이블 변경 -->
<update id="exitRoom">
	UPDATE PR_CHATROOM SET GET_ROOM = REPLACE(GET_ROOM, #{send_user_id}, 'EXIT') 
	WHERE chatroom_id = #{chatroom_id}
</update>

<!-- 채팅방 나갈 시 채팅메시지테이블 변경 -->
<update id="exitMessage">
	UPDATE PR_MESSAGE SET GET_LOOK = REPLACE(GET_LOOK, #{send_user_id}, 'EXIT') 
	WHERE chatroom_chatroom_id = #{chatroom_id}
</update>

<!-- 두명 다 채팅방을 나갔는지 확인 -->
<select id="exitCheck" resultType ="String">
	SELECT GET_ROOM FROM PR_CHATROOM
	WHERE chatroom_id = #{chatroom_id}
</select>

<!-- 채팅방 삭제  -->
<delete id="deleteRoom">
	DELETE FROM pr_chatroom 
	WHERE chatroom_id = #{chatroom_id} AND get_room = 'EXIT,EXIT' 
</delete>
<update id="reconnectRoom">
	UPDATE pr_chatroom SET get_room = chatroom_id 
	WHERE get_room LIKE '%EXIT%'
</update>

<!-- 개인 프로필가져오기 -->
<select id="getPic" resultType ="String">
	SELECT profile
	FROM pr_user
	WHERE nick = #{Nick}
</select>
</mapper>