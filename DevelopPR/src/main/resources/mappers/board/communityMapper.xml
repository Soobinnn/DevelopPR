<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="community">
   <!-- 01_01. 게시글 전체목록 조회 및 검색 조회까지 -->
<select id="listAll" resultType="CommunityVO">
    
   <!-- 목록 조회 및 페이징 전체 쿼리 -->   <!-- user를 writer로 변경해서 게시판 리스트에 나오는 것을 닉네임으로 변경한다. -->
     <include refid="pagingHeader"></include>
            SELECT ROWNUM, bno, title, content, b.regdate, viewcnt, b.writer, 
                    <!-- ** 댓글숫자표시 -->
                    (SELECT COUNT(*) FROM tbl_reply WHERE bno=b.bno) AS recnt
            FROM tbl_board b, pr_user u
            <include refid="search"></include>
            ORDER BY bno DESC, b.regdate DESC 
        <include refid="pagingFooter"></include>    
        
    </select>


<!-- 01_02. 게시글 레코드 갯수 -->
<select id="countArticle" resultType="int">
 
    SELECT COUNT(*) 
    FROM tbl_board b, pr_user u
 
    <!-- WHERE절을 include 태그로 삽입 -->
    <include refid="search"></include>
 
</select>





 
<!-- sql code 조각 -->
<!-- 반복되는 sql의 일부를 sql태그를 이용하여 따로 빼둘수 있다. -->
<!-- 검색 조건 sql -->
 <sql id="search">
        <choose>
            <!-- 검색옵션이 전체 검색일 경우 -->
            <when test="searchOption == 'all'">
                WHERE b.writer = u.nick
                AND    
                (name like '%'||#{keyword}||'%'
                OR content like '%'||#{keyword}||'%'
                OR title like '%'||#{keyword}||'%')
            </when>
            <!-- 전체 검색이 아닐 경우 -->
            <otherwise>
                WHERE b.writer = u.nick 
                AND ${searchOption} like '%'||#{keyword}||'%'
            </otherwise>
        </choose>
    </sql>
    
    <!-- 페이징 sql -->
    <sql id="pagingHeader">
        SELECT * FROM (
            SELECT ROWNUM AS rn, A.* FROM (
    </sql>
    
    <sql id="pagingFooter">
            ) A
        ) WHERE rn BETWEEN #{start} AND #{end}
    </sql>


    <!-- 02. 게시글 작성 -->
    <insert id="insert">
        INSERT INTO tbl_board (
          bno, 
          title, 
          content, 
          writer,
          step
          
        
        ) VALUES (
          
          (SELECT NVL(MAX(bno)+1, 1)FROM tbl_board),
          #{title},
          #{content},
          #{writer},
          0
                   
        )
    </insert>
    <!--03. 게시글 상세보기 조회 두 테이블의 공통된사항을 묶을 때, 이름 컬럼으로 하면 중복값이 생기는 경우가 생긴다. nick으로 변경-->
    <select id="view" resultType="CommunityVO">
        SELECT b.*, nick AS userNick
        FROM tbl_board b, pr_user u 
        WHERE bno = #{bno} AND b.writer = u.nick
    </select>
    
    
    
    
    
    <!-- 04. 게시글 조회수 증가처리 -->
    <update id="increaseViewcnt">
        UPDATE tbl_board SET viewcnt = viewcnt + 1 
        WHERE bno = #{bno}
    </update>
    
    <!-- 05. 게시글 수정처리 -->
    <update id="updateArticle">
        UPDATE tbl_board SET
            title = #{title},
            content = #{content},
            writer = #{writer}
        WHERE bno = #{bno}
    </update>
    
    <!-- 06. 게시글 삭제처리 -->
    <delete id="deleteArticle">
        DELETE FROM tbl_board
        WHERE bno = #{bno}
    </delete>

<!-- update폼 -->
<select id="updateForm" resultType="CommunityVO">
SELECT * FROM tbl_board
WHERE bno = #{bno}
</select>



<update id="addStep" parameterType="CommunityVO">

               update tbl_board set step = step + 1

               where ref = #{ref} and step &gt; #{step}

               <!-- 이렇게 넣을수도 있다.

               <![CDATA[ update reboard set step = step + 1 where ref=#{ref}

                       and step > #{step} ]]> -->

        </update>



     <insert id="reply" parameterType="CommunityVO">

       insert into tbl_board(bno,title,content,writer,step,depth,ref)
       values(#bno}, #{title}, #{content}, #{writer},#{step}+1,#{depth}+1,#{ref})

        </insert>


<!-- 업로드 파일 정보 입력 처리 추가  -->
<insert id="addAttach">
    INSERT INTO tbl_attach (
        fullname, bno
    ) VALUES (
        #{fullName}, seq_board.CURRVAL
    )
</insert>


</mapper>